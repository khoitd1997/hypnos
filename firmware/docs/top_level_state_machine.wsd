@startuml TopLevelDiagram
hide empty description

state BondedCheck <<choice>>
Sleep ---> BondedCheck: AnyWakeupEvent

state Unbonded {
    UnbondedAdvertising --> UnbondedAdvertising: TimedOut
    UnbondedAdvertising --> UnbondedConnected: Success
    UnbondedConnected-->UnbondedAdvertising: Fail
    UnbondedConnected: Try to Bond with Clients
}
BondedCheck ---> UnbondedAdvertising: Else

state Bonded {
    state WakeupReason <<choice>>
    WakeupReason -> EndWorkPeriod: UserPushButtonEvent[isBreak]
        EndWorkPeriod --> Sleep
        EndWorkPeriod: Actuate MOSFET
        EndWorkPeriod: Configure Sleep to Enable UserPushButtonEvent Wakeup
        EndWorkPeriod: Configure Sleep to Disable WorkPeriodEndEvent Wakeup
        EndWorkPeriod: CreateTimeStamp[IsStillBreak or TimedOut]

    WakeupReason -> StartWorkPeriod: UserPushButtonEvent[isNotBreak]
        StartWorkPeriod: Set Timer to Next Work Period End
        StartWorkPeriod: Configure Sleep to Disable UserPushButtonEvent Wakeup
        StartWorkPeriod: Configure Sleep to Enable WorkPeriodEndEvent Wakeup
        StartWorkPeriod --> Sleep

    WakeupReason -> BondedAdvertising: WorkPeriodEndEvent
        BondedAdvertising --> EndWorkPeriod: TimedOut

        BondedAdvertising --> BondedConnected: Success
        BondedConnected: Sync Characteristics
        UnbondedConnected---->BondedConnected: Success
        state AfterConnectBreakCheck <<choice>>
        BondedConnected ---> WriteDataToEEPROM: Success
        WriteDataToEEPROM --> AfterConnectBreakCheck
        BondedConnected -> BondedAdvertising: Fail
        BondedConnected ----> UnbondedAdvertising: ClientUnbond

        AfterConnectBreakCheck --> EndWorkPeriod: IsStillBreak
        AfterConnectBreakCheck ---> StartWorkPeriod: Else
}
BondedCheck -> ReadDataFromEEPROM: IsBonded
ReadDataFromEEPROM -> WakeupReason
@enduml
